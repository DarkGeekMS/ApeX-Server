{"variables":[],"info":{"name":"Laravel API","_postman_id":"44e9c7b8-a731-4b06-a65e-af280c31bae4","description":"","schema":"https:\/\/schema.getpostman.com\/json\/collection\/v2.0.0\/collection.json"},"item":[{"name":"Account\n\nControls the authentication, info and messages of any user account.","description":"","item":[{"name":"Delete message\nDelete a private message or a reply to a message. Either the receiver or the\nsender can delete a message. If both the receiver and the sender\nhave deleted the message, then it's deleted entirely from the database,\nIf a message is deleted, all its replies will be deleted.","request":{"url":"http:\/\/localhost\/api\/DeleteMessage","method":"POST","body":{"mode":"formdata","formdata":[{"key":"id","value":"MFVOZ0v0wkxAmwEq","type":"text","enabled":true},{"key":"token","value":"8FCNc9UlcsB8DTkP","type":"text","enabled":true}]},"description":"###Success Cases :\n1.The parameters are valid, return json contains\n \"the message is deleted successfully\" (status code 200).\n\n###Failure Cases:\n1. Message ID is not found. (status code 404)\n2. The user is not the sender nor the receiver of the message. (status code 400)\n3. The message is already deleted from the current user\n but still not deleted from the other user. (status code 400)\n4. The `token` is invalid, and the user is not authorized. (status code 400)","response":[]}},{"name":"readMsg\nRead a sent message.","request":{"url":"http:\/\/localhost\/api\/ReadMessage","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ID","value":"Q0Lh5DZlclQRGMpy","type":"text","enabled":true},{"key":"token","value":"5iT2VjHVvHetuKSa","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the details of the message.\n2) call moreChildren to retrieve replies to this message.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) message id not found.","response":[]}},{"name":"Me\nReturns the identity of the user logged in.","request":{"url":"http:\/\/localhost\/api\/Me","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"5SitZ8bqEZXK7pyo","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the user object of the sent token as json.\nfailure Cases:\n1) NoAccessRight token is not authorized.","response":[]}},{"name":"updates\nUpdates the preferences of the user.","request":{"url":"http:\/\/localhost\/api\/UpdatePreferences","method":"POST","body":{"mode":"formdata","formdata":[{"key":"username","value":"Qib7oHotPfv69SMd","type":"text","enabled":true},{"key":"fullname","value":"esl15Vj22lGAyd8w","type":"text","enabled":true},{"key":"email","value":"Nw54BZmVmlrEaZbb","type":"text","enabled":true},{"key":"avatar","value":"sQSlL5hvpscXxZ91","type":"text","enabled":true},{"key":"notifications","value":true,"type":"text","enabled":true},{"key":"token","value":"fRlQe3GN4rzTVdbw","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the data updated successfully.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) the changed email already exists.","response":[]}},{"name":"prefs\nReturns the preferences of the user.","request":{"url":"http:\/\/localhost\/api\/GetPreferences","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"SWCbuByucwE3j6Aw","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the preferences of the logged-in user.\nfailure Cases:\n1) NoAccessRight token is not authorized.","response":[]}},{"name":"blockList\nReturns the blocked users name & IDs by the logged in user.","request":{"url":"http:\/\/localhost\/api\/BlockList","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"KQFLTQK3tjYNmuFr","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the list of the blocked users.\nfailure Cases:\n1) NoAccessRight token is not authorized.","response":[]}},{"name":"Logout\nLogs out a user.","request":{"url":"http:\/\/localhost\/api\/SignOut","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"qxW3Q9eaRTeteEw4","type":"text","enabled":true}]},"description":"Success Cases :\n1) return token equals to null to ensure that the user is logout successfully.\nfailure Cases:\n1) Token invalid","response":[]}},{"name":"profileInfo\nDisplaying the profile info of the user.","request":{"url":"http:\/\/localhost\/api\/ProfileInfo","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"6AT1m9x7KnYxB5pL","type":"text","enabled":true}]},"description":"Success Cases :\n1) return username, profile picture , karma count , lists of the saved , personal and hidden posts of the user.\n2) in case of moderator it will also return the reports of the ApexCom he is moderator in.\nfailure Cases:\n1) NoAccessRight token is not authorized.","response":[]}},{"name":"Get Inbox Messages\nReturn a json contains the not-deleted inbox messages (without its replies)\n of the current user divided into `sent` and `received` messages,\n and the `received` messages are divided into `read`, `unread` and `all`\n that contain both `read` and `unread` messages,\n all messages are sorted by latest messages.","request":{"url":"http:\/\/localhost\/api\/InboxMessages","method":"POST","body":{"mode":"formdata","formdata":[{"key":"max","value":14,"type":"text","enabled":true},{"key":"token","value":"oq8oygQ98496ISMy","type":"text","enabled":true}]},"description":"###Success Cases :\n1. The logged-in user is authorized,\n return the result successfully (status code 200)\n\n###Failure Cases:\n1. The `token` is invalid, or the user is not found. (status code 400 or 404)\n2. The `max` is invalid (status code 400)","response":[]}},{"name":"SignUp\nRegisters new user into the website.","request":{"url":"http:\/\/localhost\/api\/SignUp","method":"POST","body":{"mode":"formdata","formdata":[{"key":"email","value":"lofrPOuUMHBtAZyF","type":"text","enabled":true},{"key":"username","value":"NULLQ9zDr1lDcFyU","type":"text","enabled":true},{"key":"password","value":"xQdADK0TYTVsJpxK","type":"text","enabled":true}]},"description":"Success Cases :\n1) return user data and JWT token to ensure that the user created successfully.\nfailure Cases:\n1) username already exits.\n2) email already exists.","response":[]}},{"name":"login\nValidates user's credentials and logs him in.","request":{"url":"http:\/\/localhost\/api\/SignIn","method":"POST","body":{"mode":"formdata","formdata":[{"key":"username","value":"TJldyzqnnHj6pmes","type":"text","enabled":true},{"key":"password","value":"Q428r3LvhEwpBySQ","type":"text","enabled":true}]},"description":"Success Cases :\n1) return JWT token to ensure that the user loggedin successfully.\nfailure Cases:\n1) username is not found.\n2) invalid password.","response":[]}},{"name":"mailVerify\nSend a verification email to the user with a code in case of forgetting password.","request":{"url":"http:\/\/localhost\/api\/MailVirification","method":"POST","body":{"mode":"formdata","formdata":[{"key":"username","value":"rdYTorD5orKoa9M7","type":"text","enabled":true}]},"description":"Success Cases :\n1) return success or failure message to indicate whether the email is sent or not.\nfailure Cases:\n1) username is not found.","response":[]}},{"name":"checkCode\nCheck whether the user entered the correct reset code sent to his email.","request":{"url":"http:\/\/localhost\/api\/CheckCode","method":"POST","body":{"mode":"formdata","formdata":[{"key":"code","value":8,"type":"text","enabled":true},{"key":"username","value":"0HcDpjgLbKmbyUxT","type":"text","enabled":true}]},"description":"Success Cases :\n1) return success msg to indicate whether the code is valid or not\nFailure Cases :\n1) Code is invalid.","response":[]}},{"name":"Change password whether with the old password or the forgot password code","request":{"url":"http:\/\/localhost\/api\/ChangePassword","method":"PATCH","body":{"mode":"formdata","formdata":[{"key":"token","value":"0AojaiFALYwu1znT","type":"text","enabled":true},{"key":"withcode","value":false,"type":"text","enabled":true},{"key":"password","value":"47u4NVX56po1nh6v","type":"text","enabled":true},{"key":"username","value":"cczsksmRO9r4FERh","type":"text","enabled":true},{"key":"key","value":"x0X9YAemiQfsgeQp","type":"text","enabled":true}]},"description":"The function first check if i want to change the password using the code.\nor by inputting the old password, IN the first option we won't require a\ntoken if we change it with the code first i will compare the code with the\ncode in the database then if it is true i will change the password\nand delete the code, If we change without code, We will compare\nthe old password with the given one and if they are match we will\nchange the password.","response":[]}}]},{"name":"Adminstration\n\nTo manage the controls of admins and moderators","description":"","item":[{"name":"deleteApexCom\nDeleting the ApexCom by the admin.","request":{"url":"http:\/\/localhost\/api\/DeleteApexcom","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"Apex_ID","value":"qyyTXL05ljdT0CFr","type":"text","enabled":true},{"key":"token","value":"nE6dXgfZsJLHih3i","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure ApexCom is deleted successfully.\nfailure Cases:\n1) Apex fullname (ID) is not found.\n2) NoAccessRight the token is not the site admin token id.","response":[]}},{"name":"deleteUser\nDelete a user from the application by the admin or self-delete (Account deactivation).","request":{"url":"http:\/\/localhost\/api\/DeleteUser","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"UserID","value":"scXwQoYPEVKq8KsH","type":"text","enabled":true},{"key":"token","value":"Hrm31QTlZKjj6EW6","type":"text","enabled":true},{"key":"passwordConfirmation","value":"TOTe6TZ9cnYEiFfB","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the user is deleted successfully.\nfailure Cases:\n1) user fullname (ID) is not found.\n2) NoAccessRight the token is not the site admin or the same user token id.","response":[]}},{"name":"addModerator\nAdding (or Deleting) a moderator to ApexCom.","request":{"url":"http:\/\/localhost\/api\/AddModerator","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexComID","value":"G3eMZWEz2FCwvCes","type":"text","enabled":true},{"key":"token","value":"XZQS8EJZsbb4yRqd","type":"text","enabled":true},{"key":"UserID","value":"10bbMVMB1dWVplgB","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the moderator is added successfully.\nfailure Cases:\n1) user fullname (ID) is not found.\n2) apex com is not found.\n3) NoAccessRight the token is not the site admin token id.","response":[]}}]},{"name":"ApexCom\n\nControls the ApexCom info , posts and admin.","description":"","item":[{"name":"getApexComs\ngetapexcom names which user subscribe in.","request":{"url":"http:\/\/localhost\/api\/GetApexcoms","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"arpqGvo7qRZDvAf8","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the apexComs names and ids the user subscribed in.\nfailure Cases:\n1) NoAccessRight token is not authorized.","response":[]}},{"name":"About\nto get data about an ApexCom (moderators , name, contributors , rules , description and subscribers count) with a logged in user.","request":{"url":"http:\/\/localhost\/api\/AboutApexcom","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCom_ID","value":"0zs04deUgkepktJG","type":"text","enabled":true},{"key":"token","value":"nLXlG9vNbo9AQl08","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it wasnot found an error is returned.\nThen a check that the user is not blocked from the apexcom, if he was blocked a logical error is returned.\nThen, The about information of apexcom is returned.\n\n###Success Cases :\n1) return the information about the ApexCom.\n###failure Cases:\n1) User is blocked from this apexcom.\n2) ApexCom fullname (ApexCom_id) is not found.","response":[]}},{"name":"Post\nto post text , image or video in any ApexCom.","request":{"url":"http:\/\/localhost\/api\/SubmitPost","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCom_id","value":"b657JYqoyzDdZBQi","type":"text","enabled":true},{"key":"title","value":"7mnkMdSa5n3w2LU4","type":"text","enabled":true},{"key":"body","value":"SGC9hZ5QfmloUdj2","type":"text","enabled":true},{"key":"img_name","value":"vR4csYZRKTB95BUS","type":"text","enabled":true},{"key":"video_url","value":"YXd7azcm5ZM41OG9","type":"text","enabled":true},{"key":"isLocked","value":false,"type":"text","enabled":true},{"key":"token","value":"nzgnTexNjdkSBWgS","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it wasnot found an error is returned.\nThen a check that the user is not blocked from the apexcom, if he was blocked a logical error is returned.\nValidation to request parameters is done, the post shall contain title and at least a body, an image, or a video url.\nif validation fails logical error is returned, else a new post is added and return 'created'.\n\n###Success Cases :\n1) return true to ensure that the post was added to the ApexCom successfully.\n###failure Cases:\n1) User is blocked from this ApexCom.\n2) ApexCom fullname (ApexCom_id) is not found.\n3) Not including text , image or video in the request.\n4) NoAccessRight token is not authorized.","response":[]}},{"name":"Subscribe\nfor a user to subscribe an ApexCom.","request":{"url":"http:\/\/localhost\/api\/Subscribe","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCom_id","value":"41zDo6IqxuVqihA1","type":"text","enabled":true},{"key":"token","value":"UrDXPNiPUpZZ9bGQ","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it wasnot found an error is returned.\nThen a check that the user is not blocked from the apexcom, if he was blocked a logical error is returned.\nIf, the user already subscribes this apexcom, it will delete the subscription and return 'unsubscribed'.\nElse, the user will subscribe the apexcom, and it will return 'subscribed'.\n\n###Success Cases :\n1) return true to ensure that the subscription or unsubscribtion has been done successfully.\n###failure Cases:\n1) user blocked from this ApexCom.\n2) ApexCom fullname (ApexCom_id) is not found.","response":[]}},{"name":"Site Admin\nUsed by the site admin to create or update a new ApexCom.","request":{"url":"http:\/\/localhost\/api\/SiteAdmin","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"nEyQZSs28EE4fuUc","type":"text","enabled":true},{"key":"description","value":"s3dPBjcPTrb7pbp8","type":"text","enabled":true},{"key":"rules","value":"yxwpZymTaIX5oOJd","type":"text","enabled":true},{"key":"avatar","value":"VSRxOZb4nIx3S783","type":"text","enabled":true},{"key":"banner","value":"e1T4gGGuTx7XdcXc","type":"text","enabled":true},{"key":"token","value":"bzfbBE2oCjOOrFS0","type":"text","enabled":true}]},"description":"First, a verification that the user creating or updating apexcom is an admin, if not a logical error is returned.\nThen, validating the request parameters the name, description and rules are required, banner and avatar are optional but they should be images.\nIf, the validation fails all validation errors are returned.\nThen, check if the apexcom with this name exists or not, if it already exists then its data is updatad and return 'updated'.\nif apexcom name doesn't exist then a new apexcom is created and return 'created'.\n\n###Success Cases :\n1) return true to ensure that the ApexCom was created  successfully.\n###failure Cases:\n1) NoAccessRight the token does not support to Create an ApexCom ( not the admin token).\n2) Wrong or unsufficient submitted information.","response":[]}},{"name":"Guest about\nto get data about an ApexCom (moderators , name, contributors , rules , description and subscribers count).","request":{"url":"http:\/\/localhost\/api\/AboutApexcom","method":"GET","body":{"mode":"formdata","formdata":[{"key":"ApexCom_ID","value":"UxgLWIMVL6EZe3Ma","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it wasnot found an error is returned.\nThen about information of apexcom is returned.\n\nSuccess Cases :\n1) return the information about the ApexCom.\nfailure Cases:\n2) ApexCom fullname (ApexCom_id) is not found.","response":[]}}]},{"name":"Links and comments\n\ncontrols the comments , replies and private messages for each user","description":"","item":[{"name":"add\nsubmit a new comment or reply to a comment on a post or reply to any message.","request":{"url":"http:\/\/localhost\/api\/AddReply","method":"POST","body":{"mode":"formdata","formdata":[{"key":"content","value":"TswIeFwn3Qby2fQx","type":"text","enabled":true},{"key":"parent","value":"p6fTLxcFrdOJxoxa","type":"text","enabled":true},{"key":"token","value":"8R4TY0fXNgkS8Qvk","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the comment , reply is added successfully.\nfailure Cases:\n1) post fullname (ID) is not found.\n2) NoAccessRight token is not authorized.","response":[]}},{"name":"delete\nto delete a post or comment or reply from any ApexCom by the owner of the thing,\nthe moderator of this ApexCom or any admin.","request":{"url":"http:\/\/localhost\/api\/Delete","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"name","value":"oWe9b3bTSQqeH6u9","type":"text","enabled":true},{"key":"token","value":"Go869jv9RHZdJZsQ","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the post, comment or reply is deleted successfully.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) NoAccessRight the token is not for the owner of the thing to be deleted or the moderator of this ApexCom.\n3) post , comment or reply fullname (ID) is not found.","response":[]}},{"name":"editText\nto edit the text of a post , comment or reply by its owner.","request":{"url":"http:\/\/localhost\/api\/EditText","method":"PATCH","body":{"mode":"formdata","formdata":[{"key":"name","value":"7QQb8pE240j9qJWu","type":"text","enabled":true},{"key":"content","value":"X57bZ6vtdg7Wf0cC","type":"text","enabled":true},{"key":"token","value":"kN4dii8T93fDyqfE","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the post or comment updated successfully.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) NoAccessRight the token is not for the owner of the post or comment to be edited.\n3) post or comment fullname (ID) is not found.","response":[]}},{"name":"report\nreport a post , comment or a message to the ApexCom moderator\n( message's reports will be sent to the site admin), posts or comments will be hidden implicitly as well.","request":{"url":"http:\/\/localhost\/api\/Report","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"1x33XIhzBPh6lGgU","type":"text","enabled":true},{"key":"content","value":"2r45BDM9pgns7djx","type":"text","enabled":true},{"key":"token","value":"GTdWIGITDCrJG8xg","type":"text","enabled":true}]},"description":"( moderators don't report posts).\nSuccess Cases :\n1) return true to ensure that the report is sent to the moderator of the ApexCom.\nfailure Cases:\n1) send reason (index) out of the associative array range.\n2) NoAccessRight token is not authorized.","response":[]}},{"name":"vote\ncast a vote on a post , comment or reply.","request":{"url":"http:\/\/localhost\/api\/Vote","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"Hgo9Yue21HxrcCUU","type":"text","enabled":true},{"key":"dir","value":5,"type":"text","enabled":true},{"key":"token","value":"iOpC7DSkMXmEJRAV","type":"text","enabled":true}]},"description":"Success Cases :\n1) return total number of votes on this post,comment or reply.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) fullname of the thing to vote on is not found.\n3) direction of the vote is not integer between -1 , 1.","response":[]}},{"name":"lock\nto lock or unlock a post so it can't recieve new comments.","request":{"url":"http:\/\/localhost\/api\/LockPost","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"bJCHuC0PpYWsANl4","type":"text","enabled":true},{"key":"token","value":"ATYy4ufRcUEdu6I2","type":"text","enabled":true}]},"description":"check the user id the post owner or admin in the ApexCom or moderator in the ApexCom holds the post\nto be able to lock this post otherwise error message Not Allowed will return.\nSuccess Cases :\n1) return true to ensure that the post was locked\/unlock.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) post fullname (ID) is not found.\n3) NoAccessRight the user ID is not for the owner of the post or a moderator in the ApexCom includes this post.","response":[]}},{"name":"hide\nto hide or UnHide a post from the user view.","request":{"url":"http:\/\/localhost\/api\/Hide","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"SoNVtucxvkAyxE8E","type":"text","enabled":true},{"key":"token","value":"123WV5bdYUeRYFZQ","type":"text","enabled":true}]},"description":"check valid user and post and if the post was hidden it removes it from hiddens and vice versa.\nSuccess Cases :\n1) return true to ensure that the post hidden.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) post fullname (ID) is not found.","response":[]}},{"name":"save\nSave or UnSave a post or a comment.","request":{"url":"http:\/\/localhost\/api\/Save","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ID","value":"kflQDVDr3ukwrV25","type":"text","enabled":true},{"key":"token","value":"3LXVvVkmw1W3kpyA","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the post saved successfully.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) post fullname (ID) is not found.","response":[]}},{"name":"moreChildren\nto retrieve additional comments omitted from a base comment tree (comment , replies).","request":{"url":"http:\/\/localhost\/api\/RetrieveComments","method":"POST","body":{"mode":"formdata","formdata":[{"key":"parent","value":"0r6d4HAofXySXOOe","type":"text","enabled":true},{"key":"token","value":"fFb2KnGC8BNvULXY","type":"text","enabled":true}]},"description":"Success Cases :\n1) return thr retrieved comments or replies.\nfailure Cases:\n1) NoAccessRight token is not authorized.\n2) post fullname (ID) is not found for any of the parent IDs.","response":[]}},{"name":"moreChildren\nto retrieve additional comments omitted from a base comment tree (comment , replies ).","request":{"url":"http:\/\/localhost\/api\/RetrieveComments","method":"GET","body":{"mode":"formdata","formdata":[{"key":"parent","value":"wWJrybk8Kk4qTOsO","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the retrieved comments or replies.\nfailure Cases:\n1) post , comment , reply or message fullname (ID) is not found for any of the parent IDs.","response":[]}}]},{"name":"Moderation\n\nControls the Moderators actions.","description":"","item":[{"name":"blockUser\nto block a user from ApexCom he is moderator in so that he can't interact in this ApexCom anymore.","request":{"url":"http:\/\/localhost\/api\/ApexcomBlockUser","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCom_id","value":"FwnNzPOxaMHFdUHw","type":"text","enabled":true},{"key":"user_id","value":"p9CRZeF2xwbJYIaL","type":"text","enabled":true},{"key":"token","value":"cHOcJw728LYH6Udr","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the post or comment is removed successfully.\nfailure Cases:\n1) NoAccessRight the token is not for the moderator of this ApexCom including the post or comment to be removed.\n2) user fullname (id) is not found , already blocked or not subscribed in this ApexCom.","response":[]}},{"name":"ignoreReport\nto delete the ignored report from  ApexCom's reports.","request":{"url":"http:\/\/localhost\/api\/IgnoreReport","method":"POST","body":{"mode":"formdata","formdata":[{"key":"user_id","value":"wKVKAbd5B8EOM9hc","type":"text","enabled":true},{"key":"reported_id","value":"MJVUX8MgccOIA6me","type":"text","enabled":true},{"key":"token","value":"xvvsqQsEtXAf0CBO","type":"text","enabled":true}]},"description":"Success Cases :\n1) return true to ensure that the report is deleted successfully.\nfailure Cases:\n1) NoAccessRight the token is not for the moderator of this ApexCom including the report to be removed.\n2) report fullname (id) is not found.","response":[]}},{"name":"reviewReports\nview the reports sent by any user for any post or comment in the ApexCom he is moderator in.","request":{"url":"http:\/\/localhost\/api\/ReviewReports","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCom_id","value":"XJ6SJ7VMveGcCNfS","type":"text","enabled":true},{"key":"token","value":"Qa21aIuVZ2LA7vz6","type":"text","enabled":true}]},"description":"Success Cases :\n1) return the reported posts and comments.\nfailure Cases:\n1) NoAccessRight the token is not for the moderator of this ApexCom.","response":[]}}]},{"name":"User\n\nControl the user interaction with other users","description":"","item":[{"name":"Block\nUser block another user, so they can't send private messages to each other\n or see their each other posts or comments.","request":{"url":"http:\/\/localhost\/api\/BlockUser","method":"POST","body":{"mode":"formdata","formdata":[{"key":"blockedID","value":"t2_1","type":"text","enabled":true},{"key":"token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9zaWduX3VwIiwiaWF0IjoxNTUzMjgwMTgwLCJuYmYiOjE1NTMyODAxODAsImp0aSI6IldDU1ZZV0ROb1lkbXhwSWkiLCJzdWIiOiJ0Ml8xMDYwIiwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.dLI9n6NQ1EKS5uyzpPoguRPJWJ_NJPKC3o8clofnuQo","type":"text","enabled":true}]},"description":"If the user is already blocked, the request will unblock him\n\n###Success Cases :\n1. Return json contains 'the user has been blocked successfully',\n       if the user was not blocked (status code 200)\n2. Return json contains 'the user has been unblocked seccessfully',\n       if the user was blocked already (status code 200).\n\n###Failure Cases:\n1. The `token` is invalid, return a message about the error (stauts code 400).\n2. Blocked user is not found (status code 404)\n3. The user is blocking himself (status code 400)\n4. There is a server-side error (status code 500).","response":[]}},{"name":"Compose\nSend a private message to another user.","request":{"url":"http:\/\/localhost\/api\/ComposeMessage","method":"POST","body":{"mode":"formdata","formdata":[{"key":"receiver","value":"t2_1","type":"text","enabled":true},{"key":"subject","value":"Hello","type":"text","enabled":true},{"key":"content","value":"Can I have a date with you?","type":"text","enabled":true},{"key":"token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9zaWduX3VwIiwiaWF0IjoxNTUzMjgwMTgwLCJuYmYiOjE1NTMyODAxODAsImp0aSI6IldDU1ZZV0ROb1lkbXhwSWkiLCJzdWIiOiJ0Ml8xMDYwIiwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.dLI9n6NQ1EKS5uyzpPoguRPJWJ_NJPKC3o8clofnuQo","type":"text","enabled":true}]},"description":"###Success Cases :\n1. The parameters are valid, return the id of the composed message\n   (status code 200)\n\n###Failure Cases:\n1. Messaged-user id is not found (status code 404).\n2. Invalid token, return a message about the error (status code 400).\n3. The users are blocked from each other (status code 400)\n4. There is a server-side error (status code 500).","response":[]}},{"name":"User Get User Data\nJust like [Guest Get User Data](#guest-get-user-data), except that\nit does't return user data between blocked users,\nit also adds the current user vote on the user's posts\nand if he had saved them.","request":{"url":"http:\/\/localhost\/api\/UserData","method":"POST","body":{"mode":"formdata","formdata":[{"key":"username","value":"King","type":"text","enabled":true},{"key":"token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9zaWduX3VwIiwiaWF0IjoxNTUzMzg0ODYyLCJuYmYiOjE1NTMzODQ4NjIsImp0aSI6Ikg0bU5yR1k0eGpHQkd4eXUiLCJzdWIiOiJ0Ml8yMSIsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.OJU25mPYGRiPkBuZCrCxCleaRXLklvHMyMJWX9ijR9I","type":"text","enabled":true}]},"description":"Use this request only if the user is logged in and authorized.\n\n###Success Cases :\n1. Return the data of the user successfully.\n\n###Failure Cases:\n1. User is not found (status code 400).\n2. The `token` is invalid, return a message about the error (status code 400).\n3. The users are blocked from each other (status code 400)\n4. There is a server-side error (status code 500).","response":[]}},{"name":"Guest Get User Data\nReturn user data to be seen by another user.","request":{"url":"http:\/\/localhost\/api\/UserData","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"User data includes: username, fullname, karma,\n profile picture (URL) and personal posts\n\nUse this request only if the user is a guest and not authorized\n\n###Success Cases :\n1.The parameters are valid, return the data of the user successfully\n (status code 200).\n\n###Failure Cases:\n1. User is not found (status code 404).\n2. There is a server-side error (status code 500).","response":[]}}]},{"name":"general","description":"","item":[{"name":"User Sort Posts\nJust like [Guest Sort Posts](#guest-sort-posts), except that\nit does't return the posts between blocked users\nand posts that are hidden or reported by the current user\nand posts from apexComs that the current user is blocked from,\nit also adds to every post the current user vote and if he had saved the post.","request":{"url":"http:\/\/localhost\/api\/SortPosts","method":"POST","body":{"mode":"formdata","formdata":[{"key":"apexComID","value":"t5_1","type":"text","enabled":true},{"key":"sortingParam","value":"votes","type":"text","enabled":true},{"key":"token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9zaWduX3VwIiwiaWF0IjoxNTUzMjgwMTgwLCJuYmYiOjE1NTMyODAxODAsImp0aSI6IldDU1ZZV0ROb1lkbXhwSWkiLCJzdWIiOiJ0Ml8xMDYwIiwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.dLI9n6NQ1EKS5uyzpPoguRPJWJ_NJPKC3o8clofnuQo","type":"text","enabled":true}]},"description":"Use this request only if the user is logged in and authorized.\n\n###Success Cases :\n1. Return the result successfully (status code 200).\n\n###Failure Cases:\n1. ApexCom is not found (status code 404).\n2. The `token` is invalid, return a message about the error (status code 400)\n3. There is a server-side error (status code 500).","response":[]}},{"name":"User Search\nJust like [Guest Search](#guest-search) except that\nit does't return the posts between blocked users,\nposts that are hidden or reported by the current user\nand posts from apexComs that the current user is blocked from,\nit also doesn't return blocked users\nand the apexComs that the user is blocked from,\nit also adds the current user vote on the posts and if he had saved them\nand adds the current user subscription of the apexComs.","request":{"url":"http:\/\/localhost\/api\/Search","method":"POST","body":{"mode":"formdata","formdata":[{"key":"query","value":"lorem","type":"text","enabled":true},{"key":"token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9zaWduX3VwIiwiaWF0IjoxNTUzMjgwMTgwLCJuYmYiOjE1NTMyODAxODAsImp0aSI6IldDU1ZZV0ROb1lkbXhwSWkiLCJzdWIiOiJ0Ml8xMDYwIiwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.dLI9n6NQ1EKS5uyzpPoguRPJWJ_NJPKC3o8clofnuQo","type":"text","enabled":true}]},"description":"Use this request only if the user is logged in and authorized.\n\n###Success Cases :\n1. The `query` is valid, return the results successfullly (status code 200)\n\n###Failure Cases:\n1. The `query` is invalid, return message about the error (status code 400)\n2. The `token` is invalid, return a message about the error (status code 400)\n3. There is server-side error (status code 500)","response":[]}},{"name":"Get Subscribers\nReturns a list of the users subscribed to a certain ApexCom to an authorized user.","request":{"url":"http:\/\/localhost\/api\/GetSubscribers","method":"POST","body":{"mode":"formdata","formdata":[{"key":"ApexCommID","value":"AHNujuvYVi61tzYL","type":"text","enabled":true},{"key":"token","value":"L9l8dsXixmRvjvDK","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it wasnot found an error is returned.\nThen a check that the authorized user is not blocked from the apexcom, if he was blocked a logical error is returned.\nThen, it gets the username and id of the subscribers and returns them.\n\n###Success Cases :\n1) Return the result successfully.\n###failure Cases:\n1) Return empty list if there are no subscribers.\n2) ApexComm Fullname (ID) is not found.\n3) User blocked from this apexcom.","response":[]}},{"name":"Guest Search\nReturns a json contains posts, apexComs and users that match the given query.","request":{"url":"http:\/\/localhost\/api\/Search","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"Use this request only if the user is a guest and not authorized\n\n###Success Cases :\n1. The `query` is valid, return the results successfullly (status code 200)\n\n###Failure Cases:\n1. The `query` is invalid, return message about the error (status code 400)\n2. There is server-side error (status code 500)","response":[]}},{"name":"Guest Sort Posts\nReturns a list of posts in a given ApexCom\nsorted either by the votes or by the date when they were created\nor by the number of comments.","request":{"url":"http:\/\/localhost\/api\/SortPosts","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"- When `apexComID` is missing or equals null,\n    it returns all the posts in all apexComs.\n- When `sortingParam` is missing or equals null, it uses the default value\n\nUse this request only if the user is a guest and not authorized\n\n###Success Cases :\n1. Return the result successfully (status code 200).\n\n###Failure Cases:\n1. ApexCom is not found (status code 404).\n2. There is a server-side error (status code 500).","response":[]}},{"name":"Apex Names\nReturns a list of the names and ids of all of the existing ApexComs.","request":{"url":"http:\/\/localhost\/api\/ApexComs","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"###Success Cases :\n1. Return the result successfully (status code 200).\n\n###Failure Cases:\n1. There is server-side error (status code 500).","response":[]}},{"name":"GuestGetSubscribers\nReturns a list of the users subscribed to a certain ApexCom to a guest user.","request":{"url":"http:\/\/localhost\/api\/GetSubscribers","method":"GET","body":{"mode":"formdata","formdata":[{"key":"ApexCommID","value":"x9NpApemu4mrCGaT","type":"text","enabled":true}]},"description":"It first checks the apexcom id, if it was not found an error is returned.\nit gets the username and id of the subscribers and returns them.\n\n###Success Cases :\n1) Return the result successfully.\n###failure Cases:\n2) ApexComm Fullname (ID) is not found.","response":[]}}]}]}